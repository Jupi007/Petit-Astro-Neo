security:
  enable_authenticator_manager: true

  access_decision_manager:
    strategy: unanimous
    allow_if_all_abstain: true

  password_hashers:
    Sulu\Bundle\SecurityBundle\Entity\User: bcrypt

  providers:
    sulu:
      id: sulu_security.user_provider

  access_control:
    # Website
    - { path: "/profile", roles: ROLE_USER }
    - { path: "/completion", roles: ROLE_USER }
    - { path: "/threads", roles: ROLE_USER }
    # Admin
    - { path: ^/admin/reset, roles: PUBLIC_ACCESS }
    - { path: ^/admin/security/reset, roles: PUBLIC_ACCESS }
    - { path: ^/admin/login$, roles: PUBLIC_ACCESS }
    - { path: ^/admin/2fa, roles: PUBLIC_ACCESS }
    - { path: ^/admin/_wdt, roles: PUBLIC_ACCESS }
    - { path: ^/admin/_profiler, roles: PUBLIC_ACCESS }
    - { path: ^/admin/translations, roles: PUBLIC_ACCESS }
    - { path: ^/admin$, roles: PUBLIC_ACCESS }
    - { path: ^/admin/$, roles: PUBLIC_ACCESS }
    - { path: ^/admin/p/, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_USER }

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    admin:
      pattern: ^/admin(\/|$)
      lazy: true
      provider: sulu
      entry_point: sulu_security.authentication_entry_point
      json_login:
        check_path: sulu_admin.login_check
        success_handler: sulu_security.authentication_handler
        failure_handler: sulu_security.authentication_handler
      logout:
        path: sulu_admin.logout
      two_factor:
        prepare_on_login: true
        prepare_on_access_denied: true
        check_path: 2fa_login_check_admin
        authentication_required_handler: sulu_security.two_factor_authentication_required_handler
        success_handler: sulu_security.two_factor_authentication_success_handler
        failure_handler: sulu_security.two_factor_authentication_failure_handler

    petit-astro:
      pattern: ^/
      lazy: true
      entry_point: App\Security\AuthenticationEntryPoint
      form_login:
        login_path: sulu_community.login
        check_path: sulu_community.login
        enable_csrf: true
      logout:
        path: sulu_community.logout
        target: /
      remember_me:
        secret: "%kernel.secret%"
        lifetime: 604800 # 1 week in seconds
        path: /

sulu_security:
  checker:
    enabled: true
  password_policy:
    enabled: true
    # Sulu uses the simple password_policy pattern ".{8,}" by default
    # You can change it to a more complex pattern with the following lines:
    #pattern: '(?=^.{8,}$)(?=.*\d)(?=.*[^a-zA-Z0-9]+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$'
    #info_translation_key: app.password_information

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: bcrypt
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon

    access_decision_manager:
      strategy: affirmative

    providers:
      sulu:
        id: test_user_provider

    firewalls:
      admin:
        http_basic:
          provider: sulu
      petit-astro:
        http_basic: ~

  sulu_test:
    enable_test_user_provider: true
