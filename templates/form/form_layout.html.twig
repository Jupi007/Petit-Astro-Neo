{% use 'form_div_layout.html.twig' %}

{% block form_start -%}
  {% set attr = attr|merge({class: (attr.class|default('') ~ ' grid grid-cols-12 -m-3 p-px')|trim}) %}
  {{- parent() -}}
{%- endblock form_start %}

{%- block form_widget_compound -%}
  {% set attr = attr|merge({class: (attr.class|default('') ~ ' contents')|trim}) %}
  {{- parent() -}}
{%- endblock form_widget_compound -%}

{%- block form_row -%}
  {%- set row_attr = row_attr|merge({ class: row_attr.class|default(row_class|default('col-span-12 flex flex-col gap-1 m-3')) }) -%}
  {{- parent() -}}
{%- endblock form_row -%}

{%- block widget_attributes -%}
  {% set default_widget_class = 'block p-3 leading-none outline-accent border border-outline dark:border-outline-invert focus:outline focus:outline-1 focus:border-accent bg-black/2.5 dark:bg-white/2.5' %}
  {% set default_widget_disabled_class = 'text-gray-500 bg-black/5 dark:bg-white/10' %}
  {% set default_widget_errors_class = 'outline-red-700 focus:outline-red-700 dark:outline-red-600 focus:dark:outline-red-600 border-red-700 focus:border-red-700 dark:border-red-600 focus:dark:border-red-600' %}

  {%- set attr = attr|merge({ class: attr.class|default(widget_class|default(default_widget_class)) ~ (disabled ? ' ' ~ widget_disabled_class|default(default_widget_disabled_class)) ~ (errors|length ? ' ' ~ widget_errors_class|default(default_widget_errors_class)) }) -%}
  {{- parent() -}}
{%- endblock widget_attributes -%}

{%- block form_help -%}
  {%- set help_attr = help_attr|merge({ class: help_attr.class|default(help_class|default('block opacity-60 text-end italic')) }) -%}
  {{- parent() -}}
{%- endblock form_help -%}

{%- block form_errors -%}
  {%- if errors|length > 0 -%}
    <div class="not-prose">
      <ul>
        {%- for error in errors -%}
          <li class="{{ error_item_class|default('text-red-700 dark:text-red-600 list-cross list-inside') }}">{{ error.message }}</li>
        {%- endfor -%}
      </ul>
    </div>
  {%- endif -%}
{%- endblock form_errors -%}

{%- block choice_widget_expanded -%}
  {%- set attr = attr|merge({ class: attr.class|default('mt-2') }) -%}
  <div {{ block('widget_container_attributes') }}>
    {%- for child in form %}
      <div class="flex items-center">
        {{- form_widget(child) -}}
        {{- form_label(child, null, { translation_domain: choice_translation_domain }) -}}
      </div>
    {% endfor -%}
  </div>
{%- endblock choice_widget_expanded -%}

{%- block checkbox_row -%}
  {%- set row_attr = row_attr|merge({ class: row_attr.class|default(' col-span-12') }) -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
    {{- form_errors(form) -}}
    <div class="inline-flex items-center">
      {{- form_widget(form, widget_attr) -}}
      {{- form_label(form) -}}
    </div>
    {{- form_help(form) -}}
  </div>
{%- endblock checkbox_row -%}

{%- block checkbox_widget -%}
  {%- set widget_class = widget_class|default('mr-2') -%}
  {{- parent() -}}
{%- endblock checkbox_widget -%}

{%- block radio_widget -%}
  {%- set widget_class = widget_class|default('mr-2') -%}
  {{- parent() -}}
{%- endblock radio_widget -%}

{%- block button_row -%} 
  {% set row_attr = row_attr|merge({ class: row_attr.class|default('col-span-12 flex justify-center') }) %}
  {{- parent() -}}
{%- endblock button_row -%}

{%- block button_widget -%}
  {% set attr = attr|merge({ class: attr.class|default(
    'w-fit h-fit px-3 py-2 inline-block border border-outline dark:border-outline-invert hover:bg-black/5 dark:hover:bg-white/5 text-xs font-medium no-underline transition-colors'
  ) }) %}
  {{- parent() -}}
{%- endblock button_widget -%}


{# Output label as HTML #}
{%- block form_label -%}
  {% set requiredClass = "before:content-['*'] before:mr-0.5 before:text-red-700 before:dark:text-red-600" %}
  {%- set label_attr = label_attr|merge({ class: label_attr.class|default(label_class|default('block opacity-90 ' ~ (required ? requiredClass : ''))) }) -%}
  {%- if label is not same as(false) -%}
    {%- set label -%}
      {{ label|raw }}
    {%- endset -%}
    {{ parent() }}
  {%- endif -%}
{%- endblock form_label -%}

{# CSRF Token #}
{%- block csrf_token_widget %}
    {% set controller = controller('App\\Controller\\Website\\FormTokenController::tokenAction', {
        form: form.parent.vars.name,
        html: true,
        _requestAnalyzer: false
    }) %}

    {% if app.request.isMethodCacheable %}
      {# If a request is cacheable, the CSRF token must be loaded with a turbo-frame to allow for caching the response. #}
      <turbo-frame
        src="{{ fragment_uri(controller) }}"
        id="{{ form.parent.vars.name }}_token_frame"
      >
      </turbo-frame>
    {% else %}
      {# If a request is not cacheable (eg. POST request), we can directly render it. #}
      {{ render(controller) }}
    {% endif %}
{%- endblock csrf_token_widget -%}

